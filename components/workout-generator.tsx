"use client";
/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/pZbnm7n0RpJ
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import { Button } from "@/components/ui/button";
import {
  ArrowLeftIcon,
  AtSignIcon,
  ClockIcon,
  DumbbellIcon,
  FlagIcon,
  HeartIcon,
  SendToBackIcon,
  ShirtIcon,
} from "./icons";
import { useState } from "react";
import { generateWorkout } from "@/lib/actions";
import { Workout } from "@/lib/types";
import Link from "next/link";

const BODY_PARTS = [
  { name: "Arms", icon: DumbbellIcon },
  { name: "Legs", icon: FlagIcon },
  { name: "Core", icon: AtSignIcon },
  { name: "Chest", icon: HeartIcon },
  { name: "Back", icon: SendToBackIcon },
  { name: "Shoulders", icon: ShirtIcon },
];

const DURATION = [
  { name: "15 mins", value: 15 },
  { name: "30 mins", value: 30 },
  { name: "45 mins", value: 45 },
  { name: "60 mins", value: 60 },
];

export function WorkoutGenerator() {
  const [duration, setDuration] = useState<number>(15);
  const [selectedBodyParts, setSelectedBodyParts] = useState<string[]>([]);

  return (
    <div className="flex flex-col bg-gray-900 min-h-screen">
      <header className="bg-red-600 text-gray-200 py-4 px-6 flex items-center">
        <Link className="mr-4" href="/">
          <ArrowLeftIcon className="h-6 w-6" />
        </Link>
        <h1 className="text-2xl font-bold">New Workout</h1>
      </header>
      <main className="flex-1 bg-gray-900 p-4 sm:p-6">
        <div className="max-w-4xl mx-auto">
          <section className="bg-[#1F2937] rounded-2xl shadow-md p-4 sm:p-6 mb-4 sm:mb-6">
            <h2 className="text-xl font-bold mb-4 text-gray-200 text-center">
              Body Parts
            </h2>
            <div className="grid grid-cols-2 md:grid-cols-4 gap-3 sm:gap-4">
              {BODY_PARTS.map((body) => {
                const Icon = body.icon;

                const normal =
                  "rounded-full text-gray-900 hover:bg-red-600 hover:text-gray-200";
                const selected =
                  "rounded-full text-gray-200 bg-red-600 hover:bg-red-600 hover:text-gray-200";

                const addItem = () => {
                  setSelectedBodyParts((bodyParts) => [
                    ...bodyParts,
                    body.name,
                  ]);
                };

                const removeItem = () => {
                  setSelectedBodyParts((bodyParts) =>
                    bodyParts.filter((item) => item !== body.name)
                  );
                };

                return (
                  <Button
                    variant="outline"
                    key={body.name}
                    onClick={
                      selectedBodyParts.includes(body.name)
                        ? removeItem
                        : addItem
                    }
                    className={
                      selectedBodyParts.includes(body.name) ? selected : normal
                    }
                  >
                    <Icon className="mr-2 h-5 w-5" />
                    {body.name}
                  </Button>
                );
              })}
            </div>
          </section>
          <section className="bg-[#1F2937] rounded-2xl shadow-md p-4 sm:p-6 mb-4 sm:mb-6">
            <h2 className="text-xl font-bold mb-4 text-gray-200 text-center">
              Workout Duration
            </h2>
            <div className="grid grid-cols-2 md:grid-cols-4 gap-3 sm:gap-4">
              {DURATION.map((time) => {
                const normal =
                  "rounded-full text-gray-900 hover:bg-red-600 hover:text-gray-200";
                const selected =
                  "rounded-full text-gray-200 bg-red-600 hover:bg-red-600 hover:text-gray-200";

                return (
                  <Button
                    className={duration === time.value ? selected : normal}
                    key={time.name}
                    onClick={() => setDuration(time.value)}
                    variant="outline"
                  >
                    <ClockIcon className="mr-2 h-5 w-5" />
                    {time.name}
                  </Button>
                );
              })}
            </div>
          </section>
          <div className="flex justify-center gap-4">
            <Button
              className="bg-red-600 hover:bg-red-700 text-gray-200 font-bold py-3 px-6 rounded-lg"
              disabled={selectedBodyParts.length === 0}
              onClick={() =>
                generateWorkout({ duration, bodyParts: selectedBodyParts })
              }
            >
              Generate Workout
            </Button>
          </div>
        </div>
      </main>
    </div>
  );
}

export function WorkoutList({ workouts }: { workouts: Workout[] }) {
  return (
    <div className="flex flex-col bg-gray-900 min-h-screen">
      <header className="bg-red-600 text-gray-200 py-4 px-6">
        <h1 className="text-2xl font-bold text-center">The New Workout Plan</h1>
      </header>
      <section className="bg-[#1F2937] rounded-2xl shadow-md p-4 sm:p-6 mb-4 sm:mb-6 mx-4 sm:mx-6 mt-4">
        <div className="grid gap-4 sm:gap-6">
          {workouts.map((workout) => (
            <div
              className="bg-[#1F2937] rounded-2xl p-4 sm:p-6 flex items-center justify-between"
              key={workout.name}
            >
              <div>
                <h3 className="text-lg font-bold text-gray-200">
                  {workout.name}
                </h3>
                <p className="text-gray-400">
                  {Array.from(
                    new Set(workout.excercises.map((e) => e.bodyPart))
                  ).join(", ")}
                </p>
                <p className="text-gray-400">Duration: {workout.duration}</p>
              </div>
              <Link href={`/workout/${workout.name}`}>
                <Button
                  className="rounded-full text-gray-900 hover:bg-red-600 hover:text-gray-200"
                  variant="outline"
                >
                  View Workout
                </Button>
              </Link>
            </div>
          ))}
        </div>
      </section>
      <div className="flex justify-center gap-4">
        <Link href="/create">
          <Button className="bg-red-600 hover:bg-red-700 text-gray-200 font-bold py-3 px-6 rounded-lg">
            Create New Workout
          </Button>
        </Link>
      </div>
    </div>
  );
}
